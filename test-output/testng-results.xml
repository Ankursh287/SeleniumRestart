<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once before class]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once before every Method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> testMethod2]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once after every Method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once before every Method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> testMethod1]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once after every Method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportersAndLogs -> This runs once after class]]>
    </line>
  </reporter-output>
  <suite started-at="2024-03-07T20:38:55 IST" name="Regression TestSuite" finished-at="2024-03-07T20:38:55 IST" duration-ms="47">
    <groups>
    </groups>
    <test started-at="2024-03-07T20:38:55 IST" name="Application Test" finished-at="2024-03-07T20:38:55 IST" duration-ms="47">
      <class name="testngCheck.TestNG_ReportersAndLogs">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="setUp" finished-at="2024-03-07T20:38:55 IST" duration-ms="7" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once before class]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="beforeMethod" finished-at="2024-03-07T20:38:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once before every Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod2()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="testMethod2" finished-at="2024-03-07T20:38:55 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testngCheck.TestNG_ReportersAndLogs.testMethod2(TestNG_ReportersAndLogs.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> testMethod2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="AfterMethod" finished-at="2024-03-07T20:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once after every Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="beforeMethod" finished-at="2024-03-07T20:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once before every Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod1()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="testMethod1" finished-at="2024-03-07T20:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> testMethod1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="AfterMethod" finished-at="2024-03-07T20:38:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once after every Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testMethod3()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="testMethod3" finished-at="2024-03-07T20:38:55 IST" depends-on-methods="testngCheck.TestNG_ReportersAndLogs.testMethod2" duration-ms="1" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method testngCheck.TestNG_ReportersAndLogs.testMethod3() on instance testngCheck.TestNG_ReportersAndLogs@30b7c004 depends on not successfully finished methods 
[testngCheck.TestNG_ReportersAndLogs.testMethod2() on instance testngCheck.TestNG_ReportersAndLogs@30b7c004]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method testngCheck.TestNG_ReportersAndLogs.testMethod3() on instance testngCheck.TestNG_ReportersAndLogs@30b7c004 depends on not successfully finished methods 
[testngCheck.TestNG_ReportersAndLogs.testMethod2() on instance testngCheck.TestNG_ReportersAndLogs@30b7c004]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:156)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testngCheck.TestNG_ReportersAndLogs@30b7c004]" started-at="2024-03-07T20:38:55 IST" name="cleanUp" finished-at="2024-03-07T20:38:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportersAndLogs -> This runs once after class]]>
            </line>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- testngCheck.TestNG_ReportersAndLogs -->
    </test> <!-- Application Test -->
  </suite> <!-- Regression TestSuite -->
</testng-results>
